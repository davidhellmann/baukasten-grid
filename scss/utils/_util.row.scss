/*
 |--------------------------------------------------------------------------
 |  Row Classes
 |--------------------------------------------------------------------------
 */

// Default Class Settings
[class*='#{$bk-prefix}row'] {
  @if $bk-disable-padding-horizontal == false {
    @include row($sassMode: false);
  } @else {
    @include row($margin: false, $sassMode: false);
  }

  display: flex;
  flex-flow: row wrap;
  flex: 1 1 auto;
}

[class*='#{$bk-prefix}row'].no-padding {
  > [class*='#{$bk-prefix}col'] {
    @if $bk-disable-padding-horizontal == false {
      @include col-padding(0);
    }
  }
}

.items-x-start {
  justify-content: flex-start;
}

.items-x-center {
  justify-content: center;
}

.items-x-end {
  justify-content: flex-end;
}

.items-x-around {
  justify-content: space-around;
}

.items-x-between {
  justify-content: space-between;
}

.items-y-start {
  align-items: flex-start;
}

.items-y-center {
  align-items: center;
}

.items-y-end {
  align-items: flex-end;
}

.items-y-stretch {
  align-items: stretch;
}

// Creating Row Classes
@each $key, $value in $bk-breakpoints {
  $from: map-get($value, from);
  $cols: map-get($value, cols);
  $create-classes: map-get($value, create-classes);
  $prefix: $bk-prefix;

  @if $create-classes == true {
    @media screen and (min-width: #{$from}) {
      .#{$prefix}row,
      %row {
        @if $bk-disable-padding-horizontal == false {
          @include row($cols, $sassMode: false);
        } @else {
          @include row($cols, $margin: false, $sassMode: false);
        }
      }
    }
  }
}
