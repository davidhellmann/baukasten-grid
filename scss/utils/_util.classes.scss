/*
 |--------------------------------------------------------------------------
 |  Create all the utility classes
 |  Recommended to use Purge CSS to clean up for production
 |--------------------------------------------------------------------------
 */

// Single Classes

// Section
.section {
  width: 100%;
  @include spaceX(padding-left padding-right, 2);

  .section {
    padding-left: 0;
    padding-right: 0;
  }
}

// Container
.container {
  width: 100%;
  max-width: $bk-maxWidth;
}

// Row
.row {
  width: auto;
  @include row-margin();
  display: flex;
}

// Loop that shit!
@each $key, $value in $bk-breakpoints {
  $from: map-get($value, from);
  $colLoopCount: 24;
  $pxLoopCountSizing: 32;
  $pxLoopCountMarginPadding: 16;
  $pxBaseValue: 8;
  $fluidLoopCount: 10;
  $bpPrefix: #{$key}\:;

  @if $key == 'min' {
    $bpPrefix: '';
  }

  @media (min-width: #{$from}) {
    // Widths
    @for $i from 1 through $colLoopCount {
      .#{$bpPrefix}w-#{$i}\/#{$colLoopCount} {
        width: calc(#{$i} / #{$colLoopCount} * 100%);
      }
    }

    @for $i from 1 through $pxLoopCountSizing {
      $value: $pxBaseValue * $i;

      .#{$bpPrefix}w-#{$value}px {
        width: #{$value}px;
      }
    }

    .#{$bpPrefix}w-screen {
      width: 100vw;
    }

    .#{$bpPrefix}w-full {
      width: 100%;
    }

    .#{$bpPrefix}min-w-0 {
      min-width: 0;
    }

    .#{$bpPrefix}min-w-full {
      min-width: 100%;
    }


    // Heights
    @for $i from 1 through $pxLoopCountSizing {
      $value: $pxBaseValue * $i;

      .#{$bpPrefix}h-#{$value}px {
        height: #{$value}px;
      }
    }

    .#{$bpPrefix}h-screen {
      height: 100vw;
    }

    .#{$bpPrefix}h-full {
      height: 100%;
    }

    .#{$bpPrefix}min-h-0 {
      min-height: 0;
    }

    .#{$bpPrefix}min-h-full {
      min-height: 100%;
    }

    .#{$bpPrefix}min-h-screen {
      min-height: 100vh;
    }

    .#{$bpPrefix}max-h-full {
      max-height: 100%;
    }

    .#{$bpPrefix}max-h-screen {
      max-height: 100vh;
    }

    // Margins
    .#{$bpPrefix}mx-auto {
      margin-left: auto;
      margin-right: auto;
    }

    .#{$bpPrefix}ml-auto {
      margin-left: auto;
    }

    .#{$bpPrefix}mr-auto {
      margin-right: auto;
    }


    // Display
    .#{$bpPrefix}block {
      display: block;
    }

    .#{$bpPrefix}inline-block {
      display: inline-block;
    }

    .#{$bpPrefix}inline {
      display: inline;
    }

    .#{$bpPrefix}flex {
      display: flex;
    }

    .#{$bpPrefix}inline-flex {
      display: inline-flex;
    }

    .#{$bpPrefix}table {
      display: table;
    }

    .#{$bpPrefix}table-row {
      display: table-row;
    }

    .#{$bpPrefix}table-cell {
      display: table-cell;
    }

    .#{$bpPrefix}hidden {
      display: none;
    }

    // Float
    .#{$bpPrefix}float-left {
      float: left;
    }

    .#{$bpPrefix}float-right {
      float: right;
    }

    .#{$bpPrefix}float-none {
      float: none;
    }

    .#{$bpPrefix}clearfix {
      &::after {
        content: '';
        display: table;
        clear: both;
      }
    }


    // Object Fit
    .#{$bpPrefix}object-contain {
      object-fit: contain;
    }

    .#{$bpPrefix}object-cover {
      object-fit: cover;
    }

    .#{$bpPrefix}object-fill {
      object-fit: fill;
    }

    .#{$bpPrefix}object-none {
      object-fit: none;
    }

    .#{$bpPrefix}object-scale-down {
      object-fit: scale-down;
    }


    // Object Position
    .#{$bpPrefix}object-bottom {
      object-position: bottom;
    }

    .#{$bpPrefix}object-center {
      object-position: center;
    }

    .#{$bpPrefix}object-left {
      object-position: left;
    }

    .#{$bpPrefix}object-left-bottom {
      object-position: left bottom;
    }

    .#{$bpPrefix}object-left-top {
      object-position: left top;
    }

    .#{$bpPrefix}object-right {
      object-position: right;
    }

    .#{$bpPrefix}object-right-bottom {
      object-position: right bottom;
    }

    .#{$bpPrefix}object-right-top {
      object-position: right top;
    }

    .#{$bpPrefix}object-top {
      object-position: top;
    }


    // Overflow
    .#{$bpPrefix}overflow-auto {
      overflow: auto;
    }

    .#{$bpPrefix}overflow-hidden {
      overflow: hidden;
    }

    .#{$bpPrefix}overflow-visible {
      overflow: visible;
    }

    .#{$bpPrefix}overflow-scroll {
      overflow: scroll;
    }

    .#{$bpPrefix}overflow-x-auto {
      overflow-x: auto;
    }

    .#{$bpPrefix}overflow-y-auto {
      overflow-y: auto;
    }

    .#{$bpPrefix}overflow-x-hidden {
      overflow-x: hidden;
    }

    .#{$bpPrefix}overflow-y-hidden {
      overflow-y: hidden;
    }

    .#{$bpPrefix}overflow-x-visible {
      overflow-x: visible;
    }

    .#{$bpPrefix}overflow-y-visible {
      overflow-y: visible;
    }

    .#{$bpPrefix}overflow-x-scroll {
      overflow-x: scroll;
    }

    .#{$bpPrefix}overflow-y-scroll {
      overflow-y: scroll;
    }

    .#{$bpPrefix}scrolling-touch {
      -webkit-overflow-scrolling: touch;
    }

    .#{$bpPrefix}scrolling-auto {
      -webkit-overflow-scrolling: auto;
    }


    // Position
    .#{$bpPrefix}static {
      position: static;
    }

    .#{$bpPrefix}fixed {
      position: fixed;
    }

    .#{$bpPrefix}absolute {
      position: absolute;
    }

    .#{$bpPrefix}relative {
      position: relative;
    }

    .#{$bpPrefix}sticky {
      position: sticky;
    }


    // Top / Right / Bottom / Left
    .#{$bpPrefix}inset-0 {
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }

    .#{$bpPrefix}inset-y-0 {
      top: 0;
      bottom: 0;
    }

    .#{$bpPrefix}inset-x-0 {
      right: 0;
      left: 0;
    }

    .#{$bpPrefix}top-0 {
      top: 0;
    }

    .#{$bpPrefix}right-0 {
      right: 0;
    }

    .#{$bpPrefix}bottom-0 {
      bottom: 0;
    }

    .#{$bpPrefix}left-0 {
      left: 0;
    }

    .#{$bpPrefix}inset-auto {
      top: auto;
      right: auto;
      bottom: auto;
      left: auto;
    }

    .#{$bpPrefix}inset-y-auto {
      top: auto;
      bottom: auto;
    }

    .#{$bpPrefix}inset-x-auto {
      left: auto;
      right: auto;
    }

    .#{$bpPrefix}top-auto {
      top: auto;
    }

    .#{$bpPrefix}bottom-auto {
      bottom: auto;
    }

    .#{$bpPrefix}left-auto {
      left: auto;
    }

    .#{$bpPrefix}right-auto {
      right: auto;
    }


    // Visibility
    .#{$bpPrefix}visible {
      visibility: visible;
    }

    .#{$bpPrefix}invisible {
      visibility: hidden;
    }

    // z-index
    .#{$bpPrefix}z-0 {
      z-index: 0;
    }

    .#{$bpPrefix}z-10 {
      z-index: 10;
    }

    .#{$bpPrefix}z-20 {
      z-index: 20;
    }

    .#{$bpPrefix}z-30 {
      z-index: 30;
    }

    .#{$bpPrefix}z-40 {
      z-index: 40;
    }

    .#{$bpPrefix}z-50 {
      z-index: 50;
    }

    .#{$bpPrefix}z-auto {
      z-index: auto;
    }

    // Flex Direction
    .#{$bpPrefix}flex-row {
      flex-direction: row;
    }

    .#{$bpPrefix}flex-row-reverse {
      flex-direction: row-reverse;
    }

    .#{$bpPrefix}flex-col {
      flex-direction: column;
    }

    .#{$bpPrefix}flex-col-reverse {
      flex-direction: column-reverse;
    }

    // Flex Wrap
    .#{$bpPrefix}flex-no-wrap {
      flex-wrap: nowrap;
    }

    .#{$bpPrefix}flex-wrap {
      flex-wrap: wrap;
    }

    .#{$bpPrefix}flex-wrap-reverse {
      flex-wrap: wrap-reverse;
    }

    // Align Items
    .#{$bpPrefix}items-stretch {
      align-items: stretch;
    }

    .#{$bpPrefix}items-start {
      align-items: flex-start;
    }

    .#{$bpPrefix}items-center {
      align-items: center;
    }

    .#{$bpPrefix}items-end {
      align-items: flex-end;
    }

    .#{$bpPrefix}items-baseline {
      align-items: baseline;
    }

    // Align Content
    .#{$bpPrefix}content-start {
      align-content: flex-start;
    }

    .#{$bpPrefix}content-center {
      align-content: center;
    }

    .#{$bpPrefix}content-end {
      align-content: flex-end;
    }

    .#{$bpPrefix}content-between {
      align-content: space-between;
    }

    .#{$bpPrefix}content-around {
      align-content: space-around;
    }

    // Align Self
    .#{$bpPrefix}self-auto {
      align-self: auto;
    }

    .#{$bpPrefix}self-start {
      align-self: flex-start;
    }

    .#{$bpPrefix}self-center {
      align-self: center;
    }

    .#{$bpPrefix}self-end {
      align-self: flex-end;
    }

    .#{$bpPrefix}self-stretch {
      align-self: stretch;
    }

    // Justify Content
    .#{$bpPrefix}justify-start {
      justify-content: flex-start;
    }

    .#{$bpPrefix}justify-center {
      justify-content: center;
    }

    .#{$bpPrefix}justify-end {
      justify-content: flex-end;
    }

    .#{$bpPrefix}justify-between {
      justify-content: space-between;
    }

    .#{$bpPrefix}justify-around {
      justify-content: space-around;
    }

    // Flex
    .#{$bpPrefix}flex-initial {
      flex: 0 1 auto;
    }

    .#{$bpPrefix}flex-1 {
      flex: 1 1 0%;
    }

    .#{$bpPrefix}flex-auto {
      flex: 1 1 auto;
    }

    .#{$bpPrefix}flex-none {
      flex: none;
    }

    // Flex Grow
    .#{$bpPrefix}flex-grow {
      flex-grow: 1;
    }

    .#{$bpPrefix}flex-grow-0 {
      flex-grow: 0;
    }

    // Flex Shrink
    .#{$bpPrefix}flex-shrink {
      flex-shrink: 1;
    }

    .#{$bpPrefix}flex-shrink-0 {
      flex-shrink: 0;
    }

    // Order
    .#{$bpPrefix}order-first {
      order: -9999;
    }

    .#{$bpPrefix}order-last {
      order: 9999;
    }

    .#{$bpPrefix}order-none {
      order: 0;
    }

    .#{$bpPrefix}order-1 {
      order: 1;
    }

    .#{$bpPrefix}order-2 {
      order: 2;
    }

    .#{$bpPrefix}order-3 {
      order: 3;
    }

    .#{$bpPrefix}order-4 {
      order: 4;
    }

    .#{$bpPrefix}order-5 {
      order: 5;
    }

    .#{$bpPrefix}order-6 {
      order: 6;
    }

    .#{$bpPrefix}order-7 {
      order: 7;
    }

    .#{$bpPrefix}order-8 {
      order: 8;
    }

    .#{$bpPrefix}order-9 {
      order: 9;
    }

    .#{$bpPrefix}order-10 {
      order: 10;
    }

    .#{$bpPrefix}order-11 {
      order: 11;
    }

    .#{$bpPrefix}order-12 {
      order: 12;
    }


    // Table Layout
    .#{$bpPrefix}table-auto {
      table-layout: auto;
    }

    .#{$bpPrefix}table-fixed {
      table-layout: fixed;
    }
  }


  // Paddings & Margins
  // PX Values
  @for $i from 1 through $pxLoopCountMarginPadding {
    $value: $pxBaseValue * $i;

    .#{$bpPrefix}p-#{$i} {
      padding: #{$value}px;
    }

    .#{$bpPrefix}pl-#{$i} {
      padding-left: #{$value}px;
    }

    .#{$bpPrefix}pr-#{$i} {
      padding-right: #{$value}px;
    }

    .#{$bpPrefix}pt-#{$i} {
      padding-top: #{$value}px;
    }

    .#{$bpPrefix}pb-#{$i} {
      padding-bottom: #{$value}px;
    }

    .#{$bpPrefix}px-#{$i} {
      padding-left: #{$value}px;
      padding-right: #{$value}px;
    }

    .#{$bpPrefix}py-#{$i} {
      padding-top: #{$value}px;
      padding-bottom: #{$value}px;
    }

    .#{$bpPrefix}m-#{$i} {
      margin: #{$value}px;
    }

    .#{$bpPrefix}ml-#{$i} {
      margin-left: #{$value}px;
    }

    .#{$bpPrefix}mr-#{$i} {
      margin-right: #{$value}px;
    }

    .#{$bpPrefix}mt-#{$i} {
      margin-top: #{$value}px;
    }

    .#{$bpPrefix}mb-#{$i} {
      margin-bottom: #{$value}px;
    }

    .#{$bpPrefix}mx-#{$i} {
      margin-left: #{$value}px;
      margin-right: #{$value}px;
    }

    .#{$bpPrefix}my-#{$i} {
      margin-top: #{$value}px;
      margin-bottom: #{$value}px;
    }

    .#{$bpPrefix}-m-#{$i} {
      margin: -#{$value}px;
    }

    .#{$bpPrefix}-ml-#{$i} {
      margin-left: -#{$value}px;
    }

    .#{$bpPrefix}-mr-#{$i} {
      margin-right: -#{$value}px;
    }

    .#{$bpPrefix}-mt-#{$i} {
      margin-top: -#{$value}px;
    }

    .#{$bpPrefix}-mb-#{$i} {
      margin-bottom: -#{$value}px;
    }

    .#{$bpPrefix}-mx-#{$i} {
      margin-left: -#{$value}px;
      margin-right: -#{$value}px;
    }

    .#{$bpPrefix}-my-#{$i} {
      margin-top: -#{$value}px;
      margin-bottom: -#{$value}px;
    }
  }

  // Fluid Stuff
  @if $key == 'min' {
    @for $i from 1 through $fluidLoopCount {
      $min: 8px * $i;
      $max: $min * 2;

      .p-#{$i}--fluid {
        @include f($min, $max, padding)
      }

      .pl-#{$i}--fluid {
        @include f($min, $max, padding-left)
      }

      .pr-#{$i}--fluid {
        @include f($min, $max, padding-right)
      }

      .pt-#{$i}--fluid {
        @include f($min, $max, padding-top)
      }

      .pb-#{$i}--fluid {
        @include f($min, $max, padding-bottom)
      }

      .px-#{$i}--fluid {
        @include f($min, $max, padding-left padding-right)
      }

      .py-#{$i}--fluid {
        @include f($min, $max, padding-top padding-bottom)
      }

      .m-#{$i}--fluid {
        @include f($min, $max, margin)
      }

      .ml-#{$i}--fluid {
        @include f($min, $max, margin-left)
      }

      .mr-#{$i}--fluid {
        @include f($min, $max, margin-right)
      }

      .mt-#{$i}--fluid {
        @include f($min, $max, margin-top)
      }

      .mb-#{$i}--fluid {
        @include f($min, $max, margin-bottom)
      }

      .mx-#{$i}--fluid {
        @include f($min, $max, margin-left margin-right)
      }

      .my-#{$i}--fluid {
        @include f($min, $max, margin-top margin-bottom)
      }

      .-m-#{$i}--fluid {
        @include f(-$min, -$max, margin)
      }

      .-ml-#{$i}--fluid {
        @include f(-$min, -$max, margin-left)
      }

      .-mr-#{$i}--fluid {
        @include f(-$min, -$max, margin-right)
      }

      .-mt-#{$i}--fluid {
        @include f(-$min, -$max, margin-top)
      }

      .-mb-#{$i}--fluid {
        @include f(-$min, -$max, margin-bottom)
      }

      .-mx-#{$i}--fluid {
        @include f(-$min, -$max, margin-left margin-right)
      }

      .-my-#{$i}--fluid {
        @include f(-$min, -$max, margin-top margin-bottom)
      }
    }
  }
}
